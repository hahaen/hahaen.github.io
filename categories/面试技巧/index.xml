<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>面试技巧 - 分类 - 哈哈博客</title>
        <link>https://hahaen.github.io/categories/%E9%9D%A2%E8%AF%95%E6%8A%80%E5%B7%A7/</link>
        <description>面试技巧 - 分类 - 哈哈博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>630606938@qq.com (hahaen)</managingEditor>
            <webMaster>630606938@qq.com (hahaen)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 10 Mar 2022 16:58:49 &#43;0800</lastBuildDate><atom:link href="https://hahaen.github.io/categories/%E9%9D%A2%E8%AF%95%E6%8A%80%E5%B7%A7/" rel="self" type="application/rss+xml" /><item>
    <title>Java异常</title>
    <link>https://hahaen.github.io/java%E5%BC%82%E5%B8%B8/</link>
    <pubDate>Thu, 10 Mar 2022 16:58:49 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/java%E5%BC%82%E5%B8%B8/</guid>
    <description><![CDATA[异常基本类型 异常类的基本类型是Throwable类 两大子类分别是Error和Exception Error 系统错误由Java虚拟机抛出，用Error类]]></description>
</item><item>
    <title>@Override和@overload的作用？</title>
    <link>https://hahaen.github.io/override%E5%92%8Coverload%E7%9A%84%E4%BD%9C%E7%94%A8/</link>
    <pubDate>Thu, 10 Mar 2022 16:52:44 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/override%E5%92%8Coverload%E7%9A%84%E4%BD%9C%E7%94%A8/</guid>
    <description><![CDATA[override是重写,重写是一种动态绑定的多态机制。 overload是重载，重载是一种参数多态机制，即代码通过参数的类型或个数不同而实现的]]></description>
</item><item>
    <title>Final的作用？</title>
    <link>https://hahaen.github.io/final%E7%9A%84%E4%BD%9C%E7%94%A8/</link>
    <pubDate>Thu, 10 Mar 2022 16:52:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/final%E7%9A%84%E4%BD%9C%E7%94%A8/</guid>
    <description><![CDATA[在Java中，final关键字可以用来修饰类、方法和变量（包括成员变量和局部变量）。 修饰类 当用final修饰一个类时，表明这个类不能被继承。]]></description>
</item><item>
    <title>什么时候用接口或抽象类？</title>
    <link>https://hahaen.github.io/%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E7%94%A8%E6%8E%A5%E5%8F%A3%E6%88%96%E6%8A%BD%E8%B1%A1%E7%B1%BB/</link>
    <pubDate>Thu, 10 Mar 2022 16:52:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E7%94%A8%E6%8E%A5%E5%8F%A3%E6%88%96%E6%8A%BD%E8%B1%A1%E7%B1%BB/</guid>
    <description><![CDATA[如果预计要创建组件的多个版本，则创建抽象类。抽象类提供简单的方法来控制组件版本； 如果创建的功能将在大范围的全异对象间使用，则使用接口。如果要]]></description>
</item><item>
    <title>接口和抽象类有什么区别or联系？</title>
    <link>https://hahaen.github.io/%E6%8E%A5%E5%8F%A3%E5%92%8C%E6%8A%BD%E8%B1%A1%E7%B1%BB%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%ABor%E8%81%94%E7%B3%BB/</link>
    <pubDate>Thu, 10 Mar 2022 16:49:45 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/%E6%8E%A5%E5%8F%A3%E5%92%8C%E6%8A%BD%E8%B1%A1%E7%B1%BB%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%ABor%E8%81%94%E7%B3%BB/</guid>
    <description><![CDATA[Interface(接口):定义功能，只能包含方法(实现),不能包含成员变量，可以被实现若干次。 Abstract class(抽象类):定义抽象的骨架实现，]]></description>
</item><item>
    <title>深拷贝、浅拷贝的区别？</title>
    <link>https://hahaen.github.io/%E6%B7%B1%E6%8B%B7%E8%B4%9D%E6%B5%85%E6%8B%B7%E8%B4%9D%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
    <pubDate>Thu, 10 Mar 2022 16:43:56 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/%E6%B7%B1%E6%8B%B7%E8%B4%9D%E6%B5%85%E6%8B%B7%E8%B4%9D%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
    <description><![CDATA[浅拷贝是按位拷贝对象，它会创建一个新对象，这个对象有着原始对象属性值的一份精确拷贝。 简而言之，浅拷贝仅仅复制所考虑的对象，而不复制它所引用的]]></description>
</item><item>
    <title>==、Equals区别？</title>
    <link>https://hahaen.github.io/equals%E5%8C%BA%E5%88%AB/</link>
    <pubDate>Thu, 10 Mar 2022 16:43:19 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/equals%E5%8C%BA%E5%88%AB/</guid>
    <description><![CDATA[对象类型不同 equals()：是超类Object中的方法。 ==：是操作符。 比较的对象不同 equals()：用来检测两个对象是否相等，即两个对]]></description>
</item><item>
    <title>String中有哪些方法？</title>
    <link>https://hahaen.github.io/string%E4%B8%AD%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B9%E6%B3%95/</link>
    <pubDate>Thu, 10 Mar 2022 16:34:28 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/string%E4%B8%AD%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B9%E6%B3%95/</guid>
    <description><![CDATA[常用方法： indexOf() 返回指定字符的索引。 charAt() 返回指定索引处的字符。 replace() 字符串替换。 trim() 去除字符串两端空白。 split() 分割字符串，返回一个分割后的字符串数组。 getBytes() 返回]]></description>
</item><item>
    <title>Object有哪些方法？</title>
    <link>https://hahaen.github.io/object%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B9%E6%B3%95/</link>
    <pubDate>Thu, 10 Mar 2022 16:33:22 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/object%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B9%E6%B3%95/</guid>
    <description><![CDATA[Object类，属于java.lang包，位于类层次结构树的顶部。 每个类都是Object类的直接或间接的后代。 使用或编写的每个类都继承Obj]]></description>
</item><item>
    <title>StringBuffer、StringBuilder区别</title>
    <link>https://hahaen.github.io/stringbufferstringbuilder%E5%8C%BA%E5%88%AB/</link>
    <pubDate>Thu, 10 Mar 2022 16:32:52 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/stringbufferstringbuilder%E5%8C%BA%E5%88%AB/</guid>
    <description><![CDATA[区别 StringBuffer更快，但线程不安全，常用 StringBuilder稍慢，但线程安全 线程安全性 如果没有额外声明，所有类的默认都是线]]></description>
</item></channel>
</rss>
