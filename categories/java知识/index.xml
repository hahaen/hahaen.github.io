<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>java知识 - 分类 - 哈哈博客</title>
        <link>https://hahaen.github.io/categories/java%E7%9F%A5%E8%AF%86/</link>
        <description>java知识 - 分类 - 哈哈博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>630606938@qq.com (hahaen)</managingEditor>
            <webMaster>630606938@qq.com (hahaen)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 14 Mar 2022 15:25:04 &#43;0800</lastBuildDate><atom:link href="https://hahaen.github.io/categories/java%E7%9F%A5%E8%AF%86/" rel="self" type="application/rss+xml" /><item>
    <title>Sql注入</title>
    <link>https://hahaen.github.io/sql%E6%B3%A8%E5%85%A5/</link>
    <pubDate>Mon, 14 Mar 2022 15:25:04 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/sql%E6%B3%A8%E5%85%A5/</guid>
    <description><![CDATA[万能密码 原验证登陆语句: 1 SELECT*FROMadminWHEREUsername=&#39;&#34;.$username.&#34;&#39;ANDPassword=&#39;&#34;.md5($password).&#34;&#39; 输入 1′ or 1=1 or ‘1’=’1万能密码语句变为: 1 SELECT*FROMadminWHEREUsername=&#39;1&#39;OR1=1OR&#39;1&#39;=&#39;1&#39;ANDPassword=&#39;EDFKGMZDFSDFDSFRRQWERRFGGG&#39; 即得到优先级关系：or&lt;and&lt;not，同一优先级默]]></description>
</item><item>
    <title>SpringBoot</title>
    <link>https://hahaen.github.io/springboot/</link>
    <pubDate>Sat, 12 Mar 2022 19:07:56 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/springboot/</guid>
    <description><![CDATA[什么是 SpringBoot？ Spring Boot 是 Spring 开源组织下的子项目， 是 Spring 组件一站式解决方案，主要是简化了使用 Spring 的难度， 简省了繁重的配置，提供了各种启动器]]></description>
</item><item>
    <title>SpringMVC</title>
    <link>https://hahaen.github.io/springmvc/</link>
    <pubDate>Sat, 12 Mar 2022 18:30:26 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/springmvc/</guid>
    <description><![CDATA[什么是SpringMVC? SpringMVC是一种基于 Java 的实现MVC设计模型的请求驱动类型的轻量级Web框架， 属于Spring框架的一个模块]]></description>
</item><item>
    <title>二叉树遍历</title>
    <link>https://hahaen.github.io/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86/</link>
    <pubDate>Sat, 12 Mar 2022 15:27:58 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%81%8D%E5%8E%86/</guid>
    <description><![CDATA[前序遍历：根 &mdash;&gt; 左 &mdash;&gt; 右 中序遍历：左&mdash;&gt; 根 &mdash;&gt; 右 后序遍历：左 &mdash;&gt; 右 &mdash;&gt; 根 前序遍历 中序遍历 后序遍历 层序遍历]]></description>
</item><item>
    <title>Java基础算法</title>
    <link>https://hahaen.github.io/java%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/</link>
    <pubDate>Fri, 11 Mar 2022 19:15:19 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/java%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95/</guid>
    <description><![CDATA[复杂度 冒泡排序 冒泡排序 基本原理： 对于给定的n个记录，从第一个记录开始依次对相邻的两个记录进行比较， 当前面的记录大于后面的记录时，交换位置， 进]]></description>
</item><item>
    <title>Java面向对象三大特性封装继承多态</title>
    <link>https://hahaen.github.io/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7%E5%B0%81%E8%A3%85%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/</link>
    <pubDate>Fri, 11 Mar 2022 18:39:38 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7%E5%B0%81%E8%A3%85%E7%BB%A7%E6%89%BF%E5%A4%9A%E6%80%81/</guid>
    <description><![CDATA[封装 封装把⼀个对象的属性私有化，同时提供⼀些可以被外界访问的属性的⽅法 继承 继承是使⽤已存在的类的定义作为基础建⽴新类的技术，新类的定义可以增]]></description>
</item><item>
    <title>重写和重载的作用？</title>
    <link>https://hahaen.github.io/%E9%87%8D%E5%86%99%E5%92%8C%E9%87%8D%E8%BD%BD%E7%9A%84%E4%BD%9C%E7%94%A8/</link>
    <pubDate>Thu, 10 Mar 2022 20:11:57 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/%E9%87%8D%E5%86%99%E5%92%8C%E9%87%8D%E8%BD%BD%E7%9A%84%E4%BD%9C%E7%94%A8/</guid>
    <description><![CDATA[override是重写,重写是一种动态绑定的多态机制。 overload是重载，重载是一种参数多态机制，即代码通过参数的类型或个数不同而实现的]]></description>
</item><item>
    <title>为什么重写equals时必须重写hashCode方法？</title>
    <link>https://hahaen.github.io/%E4%B8%BA%E4%BB%80%E4%B9%88%E9%87%8D%E5%86%99equals%E6%97%B6%E5%BF%85%E9%A1%BB%E9%87%8D%E5%86%99hashcode%E6%96%B9%E6%B3%95/</link>
    <pubDate>Thu, 10 Mar 2022 19:27:38 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/%E4%B8%BA%E4%BB%80%E4%B9%88%E9%87%8D%E5%86%99equals%E6%97%B6%E5%BF%85%E9%A1%BB%E9%87%8D%E5%86%99hashcode%E6%96%B9%E6%B3%95/</guid>
    <description><![CDATA[因为两个相等的对象的hashCode值必须是相等。 也就是说如果equals方法判断两个对象是相等的，那这两个对象的hashCode值也要相等]]></description>
</item><item>
    <title>静态方法和实例方法有何不同？</title>
    <link>https://hahaen.github.io/%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95%E5%92%8C%E5%AE%9E%E4%BE%8B%E6%96%B9%E6%B3%95%E6%9C%89%E4%BD%95%E4%B8%8D%E5%90%8C/</link>
    <pubDate>Thu, 10 Mar 2022 17:30:12 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95%E5%92%8C%E5%AE%9E%E4%BE%8B%E6%96%B9%E6%B3%95%E6%9C%89%E4%BD%95%E4%B8%8D%E5%90%8C/</guid>
    <description><![CDATA[调用方式 在外部调用静态方法时，可以使用类名.方法名的方式，也可以使用对象.方法名的方式，而实例方法只有后面这种方式。也就是说，调用静态方法可]]></description>
</item><item>
    <title>静态方法为什么不能调用非静态方法？</title>
    <link>https://hahaen.github.io/%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E8%83%BD%E8%B0%83%E7%94%A8%E9%9D%9E%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95/</link>
    <pubDate>Thu, 10 Mar 2022 17:27:37 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E8%83%BD%E8%B0%83%E7%94%A8%E9%9D%9E%E9%9D%99%E6%80%81%E6%96%B9%E6%B3%95/</guid>
    <description><![CDATA[静态方法是属于类的，在类加载的时候就会分配内存，可以通过类名直接访问。而非静态成员属于实例对象，只有在对象实例化之后才存在，需要通过类的实例]]></description>
</item></channel>
</rss>
