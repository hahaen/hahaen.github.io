<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>java - 标签 - 哈哈博客</title>
        <link>https://hahaen.github.io/tags/java/</link>
        <description>java - 标签 - 哈哈博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>630606938@qq.com (hahaen)</managingEditor>
            <webMaster>630606938@qq.com (hahaen)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 05 Apr 2022 23:37:18 &#43;0800</lastBuildDate><atom:link href="https://hahaen.github.io/tags/java/" rel="self" type="application/rss+xml" /><item>
    <title>Java网络基础</title>
    <link>https://hahaen.github.io/java%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</link>
    <pubDate>Tue, 05 Apr 2022 23:37:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/java%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</guid>
    <description><![CDATA[内容]]></description>
</item><item>
    <title>AOP</title>
    <link>https://hahaen.github.io/aop/</link>
    <pubDate>Mon, 04 Apr 2022 22:14:49 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/aop/</guid>
    <description><![CDATA[内容]]></description>
</item><item>
    <title>IOC</title>
    <link>https://hahaen.github.io/ioc/</link>
    <pubDate>Mon, 04 Apr 2022 22:14:33 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/ioc/</guid>
    <description><![CDATA[控制反转（Inversion of Control，简称IoC） 是面向对象编程中的一种设计原则，可以用来减低计算机代码之间的耦合度。 其中最常见的方]]></description>
</item><item>
    <title>SpringBoot中的5种跨域</title>
    <link>https://hahaen.github.io/springboot%E4%B8%AD%E7%9A%845%E7%A7%8D%E8%B7%A8%E5%9F%9F/</link>
    <pubDate>Fri, 01 Apr 2022 20:30:57 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/springboot%E4%B8%AD%E7%9A%845%E7%A7%8D%E8%B7%A8%E5%9F%9F/</guid>
    <description><![CDATA[为什么会出现跨域问题 出于浏览器的同源策略限制。 同源策略（Sameoriginpolicy）是一种约定，它是浏览器最核心也最基本的安全功能， 如]]></description>
</item><item>
    <title>SQL优化</title>
    <link>https://hahaen.github.io/sql%E4%BC%98%E5%8C%96/</link>
    <pubDate>Mon, 21 Mar 2022 13:35:30 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/sql%E4%BC%98%E5%8C%96/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>HashMap</title>
    <link>https://hahaen.github.io/hashmap/</link>
    <pubDate>Thu, 17 Mar 2022 13:14:21 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/hashmap/</guid>
    <description><![CDATA[相比于JDK7，HashMap在JDK8中做链表结构做了优化（但仍然线程不安全），在一定条件下将链表转为红黑树，提升查询效率。 put()操作]]></description>
</item><item>
    <title>常用加密算法</title>
    <link>https://hahaen.github.io/%E5%B8%B8%E7%94%A8%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/</link>
    <pubDate>Wed, 16 Mar 2022 22:51:59 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/%E5%B8%B8%E7%94%A8%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/</guid>
    <description><![CDATA[加密盐 加密盐也是比较常听到的一个概念，盐就是一个随机字符串用来和我们的加密串拼接后进行加密。 加盐主要是为了提供加密字符串的安全性。 假如有一个]]></description>
</item><item>
    <title>Shiro</title>
    <link>https://hahaen.github.io/shiro/</link>
    <pubDate>Wed, 16 Mar 2022 22:48:35 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/shiro/</guid>
    <description><![CDATA[Shiro框架 是一个轻量级的安全框架，主要提供了 授权、认证、加密、会话管理这几个功能。 shiro安全数据源有哪些 数据库 静态ini文件 session Shi]]></description>
</item><item>
    <title>Redis</title>
    <link>https://hahaen.github.io/redis/</link>
    <pubDate>Wed, 16 Mar 2022 22:05:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/redis/</guid>
    <description><![CDATA[对Redis 的了解？ Redis（全称：Remote Dictionary Server 远程字典服务）是一个开源的使用 ANSI C 语言编写、 支持网络、可基于内存亦可持久化的日志型、K]]></description>
</item><item>
    <title>反射</title>
    <link>https://hahaen.github.io/%E5%8F%8D%E5%B0%84/</link>
    <pubDate>Tue, 15 Mar 2022 14:39:16 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://hahaen.github.io/%E5%8F%8D%E5%B0%84/</guid>
    <description><![CDATA[什么是反射？ 将类的各个组成部分封装为其他对象的过程就叫做反射， 其中 组成部分 指的是我们类的 成员变量（Field）、构造方法（Construct]]></description>
</item></channel>
</rss>
